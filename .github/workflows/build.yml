name: Build oee-simulators

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Name of the environment to use
        default: "oee-dev"
        options:
          oee-dev: oee-dev Environment
        required: true

      release_body:
        type: string
        description: GitHub Release Message
        default: "Release version ${GITHUB_RUN_NUMBER}"

      run_release:
        description: 'Run release workflow?'
        required: false
        default: false
        type: bool

      run_build:
        description: 'Run build workflow?'
        required: false
        default: false
        type: bool

  push:
    branches: [ '*' ]

jobs:
  call-test-workflow:
    uses: ./.github/workflows/test.yml
    with:
      environment: ${{ github.event.inputs.environment || 'oee-dev' }}
    secrets:
      C8Y_PASSWORD: ${{ secrets.C8Y_PASSWORD }}

  recall-test-workflow-on-other-environment:
    needs: call-test-workflow
    uses: ./.github/workflows/test.yml
    with:
      environment: ${{ github.event.inputs.environment || 'oee-dev' }}
    secrets:
      C8Y_PASSWORD: ${{ secrets.C8Y_PASSWORD }}

  check-test-status:
    needs: [ call-test-workflow, recall-test-workflow-on-other-environment ]
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.output-exit-code.outputs.exit_code }}
    steps:
      - name: Check status
        run: |
          echo "Test output: ${{needs.call-test-workflow.outputs.test-output}}"
          echo "Test output: ${{needs.recall-test-workflow-on-other-environment.outputs.test-output}}"

      - name: Output exit code
        id: output-exit-code
        run: |
          echo "::set-output name=exit_code::0"
          exit 0

  check-test-status-2:
    needs: check-test-status
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: |
          echo "Call-test-workflow exited with code ${{ needs.check-test-status.outputs.status }}"

      - name: Output exit code
        run:
          exit 1

  build-upload:
    needs: check-test-status-2
    if: ${{ github.event.inputs.run_release == true }}
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ env.release_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: 'repo'

      - name: Update version number
        run: |
          cd repo/simulators
          SIMULATOR_VERSION=${GITHUB_RUN_NUMBER}
          sed -i "s/@project.version@/1.0.${SIMULATOR_VERSION}/g" cumulocity.json
          echo "release_version=${SIMULATOR_VERSION}" >> $GITHUB_ENV
        env:
          release_version: ${{ env.release_version }}

      - name: Build Docker image
        run: |
          cd repo/simulators
          docker build -t oee-simulators .
          docker save -o image.tar oee-simulators
          docker rmi oee-simulators

      - name: Upload file and zip an artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: 'oee-simulators'
          path: |
            repo/simulators/image.tar
            repo/simulators/cumulocity.json

  call-release-workflow:
    if: ${{ github.event.inputs.run_release == true && github.ref == 'refs/heads/main' }}
    needs: build-upload
    uses: ./.github/workflows/release.yml
    with:
      release_version: ${{ needs.build-upload.outputs.release_version }}
      release_body: ${{ github.event.inputs.release_body }}
